{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "defaultValue": "mypostgresgroup",
      "metadata": {
        "description": "Name of the container group."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "postgrescontainer",
      "metadata": {
        "description": "Name of the container."
      }
    },
    "postgresPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the PostgreSQL admin user."
      }
    },
    "dockerHubUsername": {
      "type": "string",
      "metadata": {
        "description": "Docker Hub username."
      }
    },
    "dockerHubPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Docker Hub password or access token."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Storage account hosting the file share."
      }
    },
    "storageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Access key for the Azure Storage account."
      }
    },
    "fileShareName": {
      "type": "string",
      "defaultValue": "postgresdata",
      "metadata": {
        "description": "Name of the Azure Files share to mount for PostgreSQL data."
      }
    },
    "mountPath": {
      "type": "string",
      "defaultValue": "/var/lib/postgresql/data",
      "metadata": {
        "description": "Path inside the container where PostgreSQL stores its data."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-10-01",
      "name": "[parameters('containerGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('containerName')]",
            "properties": {
              "image": "postgres:latest",
              "resources": {
                "requests": {
                  "cpu": 1.0,
                  "memoryInGB": 1.5
                }
              },
              "environmentVariables": [
                {
                  "name": "POSTGRES_USER",
                  "value": "admin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "secureValue": "[parameters('postgresPassword')]"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "mydb"
                }
              ],
              "ports": [
                {
                  "port": 5432
                }
              ],
              "volumeMounts": [
                {
                  "name": "postgresvolume",
                  "mountPath": "[parameters('mountPath')]"
                }
              ]
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "index.docker.io",
            "username": "[parameters('dockerHubUsername')]",
            "password": "[parameters('dockerHubPassword')]"
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Never",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "TCP",
              "port": 5432
            }
          ]
        },
        "volumes": [
          {
            "name": "postgresvolume",
            "azureFile": {
              "shareName": "[parameters('fileShareName')]",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[parameters('storageAccountKey')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "containerGroupId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerInstance/containerGroups', parameters('containerGroupName'))]"
    },
    "publicIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('containerGroupName'))).ipAddress.ip]"
    }
  }
}